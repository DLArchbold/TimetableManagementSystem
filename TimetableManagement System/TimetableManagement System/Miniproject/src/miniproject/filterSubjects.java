/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniproject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author WJ
 */
public class filterSubjects extends javax.swing.JFrame {

    /**
     * Creates new form filterSubjects
     */
    public filterSubjects() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        txtFilter = new javax.swing.JTextField();
        txtStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        txtFilter.setFont(new java.awt.Font("Segoe Marker", 1, 18)); // NOI18N
        txtFilter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilterActionPerformed(evt);
            }
        });
        getContentPane().add(txtFilter);
        txtFilter.setBounds(180, 280, 460, 50);

        txtStatus.setFont(new java.awt.Font("Segoe Marker", 1, 36)); // NOI18N
        txtStatus.setForeground(new java.awt.Color(77, 51, 35));
        getContentPane().add(txtStatus);
        txtStatus.setBounds(120, 210, 160, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/defaultFilter.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(300, 510, 200, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/defaultExit.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel2MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(590, 600, 100, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/filterPage.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 800, 667);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilterActionPerformed

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/image/hoverFilter.png"));
        jLabel1.setIcon(II);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/image/defaultFilter.png"));
        jLabel1.setIcon(II);
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/image/pressFilter.png"));
        jLabel1.setIcon(II);
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();

        PreparedStatement ps, tps, pps, rps, rrps;

        try {
            ps = conn.prepareStatement("SELECT * FROM timeslot_data WHERE subject_code = ?"); //create a  query
            tps = conn.prepareStatement("SELECT * FROM filtered WHERE subject_code = ? AND user_id = ?");

//            pps = conn.prepareStatement("SELECT Day, Start_time ,End_time FROM filtered WHERE user_id = ?");
//
//            rps = conn.prepareStatement("SELECT Day,Start_time, End_time FROM timeslot_data WHERE subject_code=?");
//            char[] codeCharArray = new char[code.length()];
//            codeCharArray = code.toCharArray();
//            if (codeCharArray[3] == ' ' && codeCharArray.length == 9)
//            {
//                for (int i = 0; i<4; i++)
//                {
//                    codeCharArray[i] = codeCharArray[i+1];
//                }
//                
//            }
            //Deal with cases for lower cased entries
            String code = txtFilter.getText();
            ps.setString(1, code.toUpperCase()); //set the preparestatement wher subject_code to the txtfilter's text
            ResultSet rs = ps.executeQuery(); //execute the query

            tps.setString(1, code.toUpperCase());
            tps.setString(2, LoginForm.userID);
            ResultSet trs = tps.executeQuery();

//            pps.setString(1, LoginForm.userID);
//            ResultSet ppps = pps.executeQuery();
//
//            rps.setString(1, txtFilter.getText().toUpperCase());
//            ResultSet prs = rps.executeQuery();
//            String date = prs.getString(1);
//            String Stime = prs.getString(2);
//            String Etime = prs.getString(3);
//            
//             String date1 = ppps.getString(1);
//            String Stime1 = ppps.getString(2);
//            String Etime1 = ppps.getString(3);
            if (trs.next()) { // to check whether this user already added this subject or not
                JOptionPane.showMessageDialog(null, "This Subject has already added into your timetable list, Please try other subject");
            } else {
                if (rs.next()) { //check the form
                    txtStatus.setText("");
                    JOptionPane.showMessageDialog(null, "SUCCESSFULLY ADDED.");

                    do {
                        String Subject_code = rs.getString(2);
                        String Subject_name = rs.getString(3);
                        String Class_type = rs.getString(4);
                        String Day = rs.getString(5);
                        String Start_time = rs.getString(6);
                        String End_time = rs.getString(7);
                        String Location = rs.getString(8);
                        //  String user_id = rs.getString(9);
                        String user_id = LoginForm.userID;

                        System.out.println(Subject_name);

                        ps = conn.prepareStatement("Insert into filtered (Subject_code, Subject_name, Class_type, Day, Start_time, End_time, Location, user_id) "
                                + "values(?,?,?,?,?,?,?,?)");
                        ps.setString(1, Subject_code);
                        ps.setString(2, Subject_name);
                        ps.setString(3, Class_type);
                        ps.setString(4, Day);
                        ps.setString(5, Start_time);
                        ps.setString(6, End_time);
                        ps.setString(7, Location);
                        ps.setString(8, user_id);
                        System.out.println("success");
                        ps.executeUpdate();

                    } while (rs.next());

                } else {
                    //Notify user there may be simple space error or if entered wrongly
                    JOptionPane.showMessageDialog(null, "Subject code does not exist," + "\n" + "Please enter subject code with no spaces in between characters and numbers.");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(filterSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }

        txtFilter.setText("");
    }//GEN-LAST:event_jLabel1MouseReleased

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/image/hoverExit.png"));
        jLabel2.setIcon(II);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/image/defaultExit.png"));
        jLabel2.setIcon(II);
    }//GEN-LAST:event_jLabel2MouseExited

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/image/pressExit.png"));
        jLabel2.setIcon(II);
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(filterSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(filterSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(filterSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(filterSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new filterSubjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtFilter;
    private javax.swing.JLabel txtStatus;
    // End of variables declaration//GEN-END:variables
}
